name: 使用Makefile构建并发布Docker镜像

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      directory:
        description: '要构建的目录路径'
        required: true
        default: 'rockylinux'
      tag:
        description: '镜像标签'
        required: true
        default: 'latest'

# 环境变量
env:
  # 设置Docker镜像名称
  IMAGE_NAME: new5tt/imagemagick

jobs:
  build-and-push:
    name: 使用Makefile构建并推送Docker镜像
    runs-on: ubuntu-latest
    
    steps:
      # 检出代码
      - name: 检出代码
        uses: actions/checkout@v4
      
      # 设置Docker Buildx（如果Makefile需要）
      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # 登录到Docker Hub
      - name: 登录到Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # 设置环境变量（版本号等）
      - name: 设置环境变量
        run: |
          # 如果是通过release触发，使用release标签
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "APP_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            # 如果是手动触发，使用输入的标签
            echo "APP_VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          fi
          
          # 设置其他可能需要的环境变量
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
          echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
      # 使用Makefile构建Docker镜像
      - name: 构建Docker镜像
        run: |
          # 根据您的Makefile调整命令
          # 例如，如果Makefile有一个build目标：
          make build APP_VERSION=${{ env.APP_VERSION }}
      
      # 推送Docker镜像
      - name: 推送Docker镜像
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }}